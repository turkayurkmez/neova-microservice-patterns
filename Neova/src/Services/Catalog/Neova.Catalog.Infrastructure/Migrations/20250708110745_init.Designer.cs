// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Neova.Catalog.Infrastructure.Persistance;

#nullable disable

namespace Neova.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250708110745_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Neova.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(8238),
                            Description = "Elektronik ürünler",
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(8491),
                            Description = "Giyim ürünleri",
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(8497),
                            Description = "Ev ve yaşam ürünleri",
                            Name = "Ev & Yaşam"
                        });
                });

            modelBuilder.Entity("Neova.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1521c8c5-9859-4d55-a782-08949f92325a"),
                            CategoryId = 0,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(8950),
                            Description = "Yüksek performanslı akıllı telefon",
                            ImageUrl = "phone.png",
                            Name = "Akıllı Telefon",
                            Price = 999.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("cde9be93-9c20-4656-a4e0-7188bdf6685f"),
                            CategoryId = 0,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(9005),
                            Description = "Pamuklu tişört",
                            ImageUrl = "tshirt.png",
                            Name = "Tişört",
                            Price = 19.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("547391f3-3e83-4693-a59f-6f7b46762e1a"),
                            CategoryId = 0,
                            CreatedDate = new DateTime(2025, 7, 8, 11, 7, 44, 679, DateTimeKind.Utc).AddTicks(9011),
                            Description = "Konforlu koltuk takımı",
                            ImageUrl = "sofa.png",
                            Name = "Koltuk Takımı",
                            Price = 2999.99m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("Neova.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.HasOne("Neova.Catalog.Domain.Aggregates.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Neova.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
